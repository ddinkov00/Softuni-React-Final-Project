{"ast":null,"code":"var _jsxFileName = \"C:\\\\Files\\\\Programming\\\\Softuni\\\\JS\\\\React\\\\Final Project\\\\Softuni-React-Final-Project\\\\frontend\\\\src\\\\components\\\\Identity\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { MakeRegisterRequest, MakeLoginRequest } from '../../../services/identityService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [userExists, setUserExists] = useState();\n\n  const onRegisterHandler = async e => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    var res = await MakeRegisterRequest(email, password);\n\n    if (res === 'TypeError: Failed to fetch') {\n      setUserExists( /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: \"User with this email already exists!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 27\n      }, this));\n    } else {\n      var loginRes = await MakeLoginRequest(email, password);\n      localStorage.setItem('token', res.userData.token);\n      localStorage.setItem('roleId', res.userData.roleId);\n      history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"container-md mt-5 mb-5\",\n    onSubmit: onRegisterHandler,\n    style: {\n      maxWidth: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), userExists, /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicEmail\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicPassword\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicPassword\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        name: \"confirmPassword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"zz3/h5xwNkXoeaRmNZBfnI+xB4M=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Files/Programming/Softuni/JS/React/Final Project/Softuni-React-Final-Project/frontend/src/components/Identity/Register/Register.js"],"names":["useState","Form","Button","MakeRegisterRequest","MakeLoginRequest","Register","userExists","setUserExists","onRegisterHandler","e","preventDefault","email","target","value","password","res","loginRes","localStorage","setItem","userData","token","roleId","history","push","maxWidth"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nimport { MakeRegisterRequest, MakeLoginRequest } from '../../../services/identityService'\r\n\r\nconst Register = () => {\r\n    const [userExists, setUserExists] = useState();\r\n\r\n    const onRegisterHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const email = (e.target.email.value);\r\n        const password = (e.target.password.value);\r\n\r\n        var res = await MakeRegisterRequest(email, password);\r\n        \r\n        if (res === 'TypeError: Failed to fetch') {\r\n            setUserExists(<p className=\"text-danger\">User with this email already exists!</p>)\r\n        } else {\r\n            var loginRes = await MakeLoginRequest(email, password);\r\n            localStorage.setItem('token', res.userData.token);\r\n            localStorage.setItem('roleId', res.userData.roleId);\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className='container-md mt-5 mb-5' onSubmit={ onRegisterHandler } style={{ maxWidth: 500 }}>\r\n            <h1>Register</h1>\r\n            { userExists }\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"mb-3\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\" className=\"mb-3\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\" className=\"mb-3\">\r\n                <Form.Label>Confirm password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Confirm password\" name=\"confirmPassword\" />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Register\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}